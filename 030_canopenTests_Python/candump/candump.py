from http.server import HTTPServer, BaseHTTPRequestHandler

import time     

from subprocess import Popen, PIPE
from fcntl import fcntl, F_GETFL, F_SETFL
from os import O_NONBLOCK, read

# run the shell as a subprocess:
p = Popen(  ['candump', '-tA', 'can0'],
            stdin = PIPE,
            stdout = PIPE,
            stderr = PIPE,
            shell = False, 
            universal_newlines=False )

BUF_SIZE = 300
buffer = []
running = False

print("Start CANDUMP Example")

def createHTML():
    out ='''<html>
    <head>
        <style> 
            html {
                font-family: Helvetica
            }
            div.ex1 {
                background-color: lightblue;
                height: 80%;
                overflow-y: scroll;
            }
        </style>
        <meta http-equiv="refresh" content="1">
        <form action=/candump method="post">
            <p>On Off</p>
            <input type="submit" name="on" value="on">
            <input type="submit" name="off" value="off">
            <input type="submit" name="del" value="del log">
        </form>
    </head>
    <body>
        <div class="ex1">
'''
    # set the O_NONBLOCK flag of p.stdout file descriptor:
    flags = fcntl(p.stdout, F_GETFL) # get current p.stdout flags
    fcntl(p.stdout, F_SETFL, flags | O_NONBLOCK)

    # get the output
    while True:
        try:
            raw = read(p.stdout.fileno(), 1024).decode('utf_8') 
            global running
            if running:
                for l in raw.splitlines():
                    global buffer
                    buffer.append(l)
        except OSError:
            # the os throws an exception if there is no data
            # print ('[No more data]')
            break

    count = 0
    for item in reversed(buffer):
        count += 1
        if count > BUF_SIZE:
            buffer.pop(0)
        out += item + '<br>'

    out +='''
        </div> 
    </body>
</html>'''
    return out



class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/favicon.ico':
            self.send_header('Content-type','image/jpeg')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
        else:
            self.send_response(200)
            self.send_header("Content-type", "text/html")
            self.end_headers() 
            self.wfile.write(createHTML().encode(encoding='utf_8'))


    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        body = self.rfile.read(content_length).decode('utf_8')

        if "on" in body:
            global running
            running = True
            print('on')
            global proc
            proc = p
        elif "off" in body:
            running = False
            print('off')

        elif "del" in body:
            global buffer
            buffer.clear()

        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        self.wfile.write(createHTML().encode(encoding='utf_8'))

httpd = HTTPServer(('', 8051), SimpleHTTPRequestHandler)
httpd.serve_forever()
