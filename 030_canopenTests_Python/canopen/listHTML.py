import canopen

def createList(node):
    output = '''
<html>
    <head>
        <link rel="stylesheet" href="bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    </head>
    <body>
    <nav class="navbar navbar-dark bg-dark">
        <a class="navbar-brand" href="/">CANopen Interface  -> SDO Liste</a>
    </nav>
    
    <div class="container" style="margin-top: 1em;">
        <div class="row bg-primary text-white">
            <div class="col-1 border ">Index</div>
            <div class="col-1 border">Sub</div> 
            <div class="col-3 border">Name</div> 
            <div class="col-1 border">Default</div> 
            <div class="col-1 border">Value</div>
            <div class="col-3 border">neuer Wert</div>
            <div class="col-1 border">send</div>
            <div class="col-1 border">read</div>
        </div>
    '''

    for obj in node.object_dictionary.values() :
        _cob = '0x%X' % obj.index
        if isinstance(obj, canopen.objectdictionary.Variable) :
            output += f'''
            <div class="row">
                <div class="col-1 border bg-light">{_cob}</div>
                <div class="col-1 border bg-light">{obj.subindex}</div>
                <div class="col-3 border bg-light">{obj.name}</div>
                <div class="col-1 border bg-light">{obj.default}</div>
                <div class="col-1 border bg-light"> <label id="value{obj.index}:0"> {obj.value} </label></div>
            '''
            if "ro" in obj.access_type or "const" in obj.access_type:  
                output += '<div class="col-4 border bg-light"></div>'
            else: 
                output += f''' 
                    <div class="col-3 border bg-light"> 
                        <input type="text" id="sdo{obj.index}:0" value="{obj.default}">
                    </div>
                    <div class="col-1 border bg-light">
                        <button type="button" onclick="sendXML(0, {obj.index}, 0, {node.id})" id="btsend{obj.index}:0">send</button>
                    </div>
                '''
            output += f'''
                    <div class="col-1 border bg-light">
                        <button type="button" onclick="sendXML(1, {obj.index}, 0, {node.id})" id="btread{obj.index}:0">read</button>
                    </div>
            </div>'''
        else :
            if hasattr(obj, 'subindices') :
                for sub in obj.values(): 
                    output += f'''
                    <div class="row">
                        <div class="col-1 border bg-light">{_cob}</div>
                        <div class="col-1 border bg-light">{sub.subindex}</div>
                        <div class="col-3 border bg-light">{sub.name}</div>
                        <div class="col-1 border bg-light">{sub.default}</div>
                        <div class="col-1 border bg-light"> <label id="value{sub.index}:{sub.subindex}"> {sub.value} </label></div>
                    '''
                    if "ro" in sub.access_type or "const" in sub.access_type:  
                        output += '<div class="col-4 border bg-light"></div>'
                    else:   
                        output += f''' 
                            <div class="col-3 border bg-light"> 
                                <input type="text" id="sdo{sub.index}:{sub.subindex}" value="{sub.default}">
                            </div>
                            <div class="col-1 border bg-light"> 
                                <button type="button" onclick="sendXML(0, {sub.index}, {sub.subindex}, {node.id})" id="btsend{sub.index}:{sub.subindex}">
                                    send
                                </button>
                            </div>
                        '''
                    output += f'''  <div class="col-1 border bg-light"><button type="button" onclick="sendXML(1, {sub.index}, {sub.subindex}, {node.id})" id="btread{sub.index}:{sub.subindex}">read</button></div>
                    </div>'''
    output += '''</div>
    </body>
    <script src="script_list.js"></script>
    <script src="jquery.min.js"></script>
    <script src="bootstrap.bundle.min.js"></script>
</html>'''

    return output



