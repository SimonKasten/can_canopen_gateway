
var desc_modes = {
    "no mode change / no mode assigned": 0,
    "profile Position mode": 1,
    "velocity mode": 2,
    "profile velocity mode": 3,
    "profile torque mode": 4,
    "reserved": 5,
    "homing mode": 6,
    "interpolated position mode": 7,
    "cyclic synchronous position mode": 8,
    "cyclic synchronous velocity mode": 9,
    "cyclic synchronous torque mode": 10,
    "gear mode": -1
};

// bit-wisebit-wisebit-wisebit-wisebit-wisebit-wisebit-wise
var desc_status = {
    "ready to switch on": 0,
    "switched on": 1,
    "operation enabled": 2,
    "fault": 3,
    "voltage enabled": 4,
    "quick stop": 5,
    "switch on disabled": 6,
    "warning": 7,
    "manufacturer-specific": 8,
    "remote": 9,
    "target reached": 10,
    "internal limit active": 11,
    "mode-specific1": 12,
    "mode-specific2": 13,
    "manufacturer-specific1": 14,
    "manufacturer-specific2": 15
};





function sendXML(befehl, node, mode) {

    var xhttp = new XMLHttpRequest();

    xhttp.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            var input = JSON.parse(this.responseText);
            console.log(input);

            if (input.hasOwnProperty("success") && input.hasOwnProperty("errorMsg")) {
                document.getElementById("lbl").innerHTML = input["errorMsg"];
                s = input["success"];
                if (s == 1) { // Success
                    document.getElementById("led1").style.backgroundColor = "green";
                }
                else if (s == 0 || s == null) { // no success
                    document.getElementById("led1").style.backgroundColor = "orange";
                }
                else if (s == -1) { // Error
                    document.getElementById("led1").style.backgroundColor = "red";
                }
                else {
                    document.getElementById("lbl").innerHTML = "...";
                }
            }
        }
    };

    ids = "servo" + node;

    if (mode == 0) {
        xhttp.open("POST", "befehl=" + befehl + "&node=" + node, true);
    }
    else if (mode == 1) {
        soll_rpm = document.getElementById(ids + "_sollrpm").value;
        max_torq = document.getElementById(ids + "_maxtorq").value;
        xhttp.open("POST", "befehl=" + befehl + "&node=" + node + "&mode=" + mode + "&soll_rpm=" + soll_rpm + "&max_torq=" + max_torq, true);
    }
    else if (mode == 2) {
        soll_torq = document.getElementById(ids + "_solltorq").value;
        max_rpm = document.getElementById(ids + "_maxrpm").value;
        xhttp.open("POST", "befehl=" + befehl + "&node=" + node + "&mode=" + mode + "&soll_torq=" + soll_torq + "&max_rpm=" + max_rpm, true);
    }
    else if (mode == 3) {
        soll_pos = document.getElementById(ids + "_pos_soll").value;
        pos_maxrpm = document.getElementById(ids + "_pos_maxrpm").value;
        pos_maxacc = document.getElementById(ids + "_pos_maxacc").value;
        pos_maxdec = document.getElementById(ids + "_pos_maxdec").value;
        rel_abs = document.getElementById(ids + "_rel_abs").value;
        xhttp.open("POST", "befehl=" + befehl + "&node=" + node + "&mode=" + mode + "&soll_pos=" + soll_pos + "&pos_maxrpm=" + pos_maxrpm + "&pos_max_acc=" + pos_maxacc + "&pos_max_dec=" + pos_maxdec  + "&rel_abs=" + rel_abs, true);
    }
    xhttp.send();
}




function createStatusTable() {
    var out = ""
    var out2 = ""
    for (var s in desc_status) {
        out += "<div class=\"row\" id=\"id1_stat" + desc_status[s] + "\"><div class=\"col border\">[" + desc_status[s] + "]  " + s + "</div></div>";
        out2 += "<div class=\"row\" id=\"id2_stat" + desc_status[s] + "\"><div class=\"col border\">[" + desc_status[s] + "]  " + s + "</div></div>";
    }
    document.getElementById("statustable").innerHTML = out;
    document.getElementById("statustable2").innerHTML = out2;
}

function createModeTable() {
    var out = ""
    var out2 = ""
    for (var m in desc_modes) {
        out += "<div class=\"row\" id=\"id1_op" + desc_modes[m] + "\"><div class=\"col border\">[" + desc_modes[m] + "]  " + m + "</div></div>";
        out2 += "<div class=\"row\" id=\"id2_op" + desc_modes[m] + "\"><div class=\"col border\">[" + desc_modes[m] + "]  " + m + "</div></div>";
    }
    document.getElementById("modetable").innerHTML = out;
    document.getElementById("modetable2").innerHTML = out2;
}

function createTpdoTable() {
    var out = ""
    var out2 = ""
    for (var i = 1; i < 13; i++) {
        out += "<div class=\"row\"><div class=\"col border\" id=\"id1_name" + i + "\">0</div><div class=\"col border\" id=\"id1_dev" + i + "\">0</div></div>";
        out2 += "<div class=\"row\"><div class=\"col border\" id=\"id2_name" + i + "\">0</div><div class=\"col border\" id=\"id2_dev" + i + "\">0</div></div>";
    }
    document.getElementById("tpdotable").innerHTML = out;
    document.getElementById("tpdotable2").innerHTML = out2;
}



setInterval(function () {


    var XHR = new XMLHttpRequest();
    var XHR2 = new XMLHttpRequest();

    XHR.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            var input = JSON.parse(this.responseText);

            if (input.hasOwnProperty("success"))
                if (input["success"] == -1)
                    return;
            if (input.hasOwnProperty("ist_rpm"))
                document.getElementById("drehzahl_ID1").innerHTML = input["ist_rpm"];
            if (input.hasOwnProperty("ist_pos"))
                document.getElementById("position_ID1").innerHTML = input["ist_pos"];
            if (input.hasOwnProperty("ist_torq"))
                document.getElementById("torque_ID1").innerHTML = input["ist_torq"];
            if (input.hasOwnProperty("ist_curr"))
                document.getElementById("strom_ID1").innerHTML = input["ist_curr"];

            var i = 0;
            for (var k in input) {
                i++;
                document.getElementById("id1_name" + i).innerHTML = k;
                document.getElementById("id1_dev" + i).innerHTML = input[k];
            }
            // bitwise statusword
            for (var j = 0; j < 16; j++) {
                var bit = (input.statusword >> j) & 1;
                if (bit) {
                    document.getElementById("id1_stat" + j).style.backgroundColor = "#34d064";
                } else {
                    document.getElementById("id1_stat" + j).style.backgroundColor = "transparent";
                }
            }
            // opmode
            for (var m in desc_modes) {
                document.getElementById("id1_op" + desc_modes[m]).style.backgroundColor = "transparent";
            }
            document.getElementById("id1_op" + input.opmode).style.backgroundColor = "#ffc107";

        }
    };


    XHR2.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            var input = JSON.parse(this.responseText);

            if (input.hasOwnProperty("success"))
                if (input["success"] == -1)
                    return;
            if (input.hasOwnProperty("ist_rpm"))
                document.getElementById("drehzahl_ID2").innerHTML = input["ist_rpm"];
            if (input.hasOwnProperty("ist_pos"))
                document.getElementById("position_ID2").innerHTML = input["ist_pos"];
            if (input.hasOwnProperty("ist_torq"))
                document.getElementById("torque_ID2").innerHTML = input["ist_torq"];
            if (input.hasOwnProperty("ist_curr"))
                document.getElementById("strom_ID2").innerHTML = input["ist_curr"];



            var i = 0;
            for (var k in input) {
                i++;
                document.getElementById("id2_name" + i).innerHTML = k;
                document.getElementById("id2_dev" + i).innerHTML = input[k];
            }
            // bitwise statusword
            for (var j = 0; j < 16; j++) {
                var bit = (input.statusword >> j) & 1;
                if (bit) {
                    document.getElementById("id2_stat" + j).style.backgroundColor = "#34d064";
                } else {
                    document.getElementById("id2_stat" + j).style.backgroundColor = "transparent";
                }
            }
            // opmode
            for (var m in desc_modes) {
                document.getElementById("id2_op" + desc_modes[m]).style.backgroundColor = "transparent";
            }
            document.getElementById("id2_op" + input.opmode).style.backgroundColor = "#ffc107";

        }

    };
    XHR.open("POST", "monitor", true);
    XHR.send();
    XHR2.open("POST", "moni2tor", true);
    XHR2.send();

}, 1000);



