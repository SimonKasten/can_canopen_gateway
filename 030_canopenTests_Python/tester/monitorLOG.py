
#!/usr/bin/env python
import can

import sys, getopt
import struct
def receive_all(argv):

    channelnr = 0
    try:
        opts, args = getopt.getopt(argv,"hc:",["channel="])
    except getopt.GetoptError:
        print("USAGE:  monitorCAN.py -c <channel>")
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h':
            print("USAGE:  monitorCAN.py -c <channel>")
            sys.exit()
        elif opt in ("-c", "--channel"):
            channelnr = arg

    print('Using vector CANCaseXL with Channel: ', channelnr)



    bus = can.interface.Bus(bustype='vector', app_name='CANalyzer', channel=channelnr, bitrate=500000)

    try:
        while True:
            msg = bus.recv(1)
            if msg is not None:
                if msg.arbitration_id == 0x602:
                    cobid = msg.data[1] + msg.data[2] * 0x100
                    if cobid != 0x20c7 :
                        var = msg.data[4:]
                        fff = struct.unpack('<f', var)
                        iii = struct.unpack('<I', var)
                        print(hex(msg.data[0]), hex(cobid), hex(msg.data[3]),
                        "   float:", fff, "int:" , iii )
                        # < little endian
                    


    except KeyboardInterrupt:
        pass  # exit normally

if __name__ == "__main__":
    receive_all(sys.argv[1:])