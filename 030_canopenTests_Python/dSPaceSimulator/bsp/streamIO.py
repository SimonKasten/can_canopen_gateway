import time

import six
import nixnet
from nixnet import constants
from nixnet import types


def main():
    interface1 = 'CAN1'
    interface2 = 'CAN2'


    input_session = nixnet.FrameInStreamSession(interface1)
    output_session = nixnet.FrameOutStreamSession(interface2)
            
    input_session.intf.can_term = constants.CanTerm.ON
    output_session.intf.can_term = constants.CanTerm.ON

    input_session.intf.baud_rate = 500000
    output_session.intf.baud_rate = 500000

    input_session.start()


    payload_list = [2, 4, 8, 16]

    frame_id = types.CanIdentifier(0, extended=True)
    payload = bytearray(payload_list)
    frame = types.CanFrame(frame_id, constants.FrameType.CAN_DATA, payload)

    for index, byte in enumerate(payload):
        payload[index] = byte

    frame.payload = payload

    while True:

        output_session.frames.write([frame])
        print('Sent frame with ID: {} payload: {}'.format(frame.identifier,
                                                            list(frame.payload)))

        time.sleep(2)

        frames = input_session.frames.read(1)
        for frame in frames:
            print('Received frame with ID: {} payload: {}'.format(frame.identifier,
                                                                    list(six.iterbytes(frame.payload))))


if __name__ == '__main__':
    main()
    